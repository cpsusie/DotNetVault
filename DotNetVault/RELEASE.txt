RELEASE NOTES VERSION 0.2.5.8:
      * Update dependencies.
      * Add dependency to High-Precision-Timestamps v0.1.0.0
      * Use monotonic DateTimes from High-Precision-Timestamps to compute durations and timeouts
      * Rename VaultSafeWhiteList.txt to vaultsafe
      .txt

RELEASE NOTES VERSION 0.2.5.4:
      * Update dependencies.
      * Add dependency to High-Precision-Timestamps v0.1.0.0
      * Use monotonic DateTimes from High-Precision-Timestamps to compute durations and timeouts
      * Rename VaultSafeWhiteList.txt to vaultsafewhitelist.txt

RELEASE NOTES VERSION 0.2.5.3:

      * Fixed problem with SourceLink not working correctly.
      * Fixed bug (Issue #2) that would throw a recursion exception sometimes when, using certain combinations of overloads, acquiring upgradable readonly locks then upgrading them would throw a lock recursion exception.
      * Update the quick start functionality tour and installation guides to use pictures reflecting more recent versions.  

RELEASE NOTES VERSION 0.2.5.1:
      
      * No significant changes to code in this release.
      * Resolved broken links displayed on project's NuGet page.
      * Fixed problem with license on NuGet. 

RELEASE NOTES VERSION 0.2.5.0:

The last official release was version [0.1.5.4](https://github.com/cpsusie/DotNetVault/releases/tag/v0.1.5.4), 
available as a Nuget package (https://www.nuget.org/packages/DotNetVault/0.1.5.4).  Since then, **many** features have been added to DotNetVault:

    * Upgrading to new versions of Roslyn libraries, immutable collections and other minor dependency upgrades
    * Changing some of the formatting of analyzer diagnostics to comply with Roslyn authors' recommendations
    * Adding Monitor Vaults (using Monitor.Enter + sync object) as the synchronization mechanism
    * Adding ReadWrite Vaults (using ReaderWriterLockSlim) as their synchronization mechanism
    * Fixing flawed static analyzer rules
    * Adding new analyzer rules to close encountered loopholes in the ruleset that potentially allowed unsynchronized access to protected resource objects
    * Unit tests as appropriate for new functionality
    * Creation of quick start installation guides with test projects
    * Not including project pdfs in the released package but instead providing an md document and a txt document with links to those documents in the github repository
    * Significant updates to the formatting and content of project markdown documents
    * Adding Source Link and releasing a symbol package along with the nuget package for this project
    * Writing many test projects and demonstration projects to verify functionality, stress test and profile performance of the vaults
    * Adding a document serving as a guide to using large mutable value types generally and as a repository for shared mutable state  
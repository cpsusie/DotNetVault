<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup Label="Globals">
    <SccProjectName>SAK</SccProjectName>
    <SccProvider>SAK</SccProvider>
    <SccAuxPath>SAK</SccAuxPath>
    <SccLocalPath>SAK</SccLocalPath>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>DotNetVault</PackageId>
    <PackageVersion>0.2.2.1-beta</PackageVersion>
    <Authors>Christopher Susie</Authors>
    <PackageLicenseUrl></PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/cpsusie/DotNetVault</PackageProjectUrl>
    <PackageIconUrl></PackageIconUrl>
    <RepositoryUrl>https://github.com/cpsusie/DotNetVault</RepositoryUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Description>
      DotNetVault is a library and static code analysis tool that makes managing shared mutable state in multi-threaded applications more manageable and less error prone.  It also provides a common abstraction over several commonly used synchronization mechanisms, allowing you to change from one underlying type to another (such as from lock free synchronization to mutex/monitor lock based) without needing to refactor your code. Where errors do still occur, they are easier to locate and identify.

      It provides an abstraction over several different underlying synchronization mechanisms: lock-free synchronization using atomics, Monitor.Enter (i.e. C# lock(syncObj) {}) and ReaderWriterLockSlim. Because the common functionality shared by vaults providing these varied underlying mechanism is exposed by a common (compile-time) API, it is easier than ever to experiment with changing the underlying mechanism without need for much code refactoring.  Simply change the type of vault you instantiate to one that uses the synchronization mechanism you desire.

      A full project description is included in "DotNetVault Description.pdf".  Source code, example projects, unit tests, stress test and quick start guide on GitHub.
</Description>
    <PackageReleaseNotes>
      RELEASE NOTES VERSION 0.2.2.1-beta:

        A BigValueListVault added, providing a vault protecting a list-like collection, especially suited for large value types. 

        Unit tests added, including a stress test called Cafe Babe game.  The Cafe Babe game is a unit test and stand-alone console-driven stress testing utility.

        "DotNetVault.Description.pdf" updated to reflect changes.
</PackageReleaseNotes>
    <Copyright>Copyright © 2019-2020 CJM Screws, LLC</Copyright>
    <PackageTags>DotNetVault, analyzers, synchronization, thread-safety, threadsafe, deadlock, deadlock-prevention</PackageTags>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <LangVersion>8.0</LangVersion>
    <Version>0.2.2.1</Version>
    <AssemblyName>DotNetVault</AssemblyName>
    <RootNamespace>DotNetVault</RootNamespace>
    <Company>CJM Screws, LLC</Company>
    <AssemblyVersion>0.2.2.1</AssemblyVersion>
    <FileVersion>0.2.2.1</FileVersion>
    <PackageLicenseFile>license.txt</PackageLicenseFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\Release\netstandard2.0\DotNetVault.xml</DocumentationFile>
    <OutputPath>bin\Release\netstandard2.0\</OutputPath>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <LangVersion>8.0</LangVersion>
    <WarningsAsErrors />
    <DefineConstants></DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\Debug\netstandard2.0\DotNetVault.xml</DocumentationFile>
    <OutputPath>bin\Debug\netstandard2.0\</OutputPath>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors />
    <LangVersion>8.0</LangVersion>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="bin\**" />
    <Compile Remove="Resources\**" />
    <EmbeddedResource Remove="bin\**" />
    <EmbeddedResource Remove="Resources\**" />
    <None Remove="bin\**" />
    <None Remove="Resources\**" />
    <None Include="..\DotNetVault Description.docx" Link="DotNetVault Description.docx" />
    <None Include="..\license.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

 
  <ItemGroup>
    <AdditionalFiles Include="VaultSafeWhiteList.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Pack>True</Pack>
    </AdditionalFiles>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="JetBrains.Annotations" Version="2019.1.3" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="2.9.6" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.3.1" PrivateAssets="all" />
    <PackageReference Update="NETStandard.Library" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources.Designer.cs" DesignTime="True" AutoGen="True" DependentUpon="Resources.resx" />
    <Compile Update="TypeSymbolVsTpAnalysisResultPrinterSource.cs">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Compile>
    <EmbeddedResource Update="Resources.resx" Generator="PublicResXFileCodeGenerator" LastGenOutput="Resources.Designer.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Update="tools\*.ps1" CopyToOutputDirectory="Always" Pack="true" PackagePath="" />
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="true" />
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="lib/netstandard2.0/" Visible="true" />
    <None Include="$(OutputPath)\$(AssemblyName).xml" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="true" />
    <None Include="$(OutputPath)\$(AssemblyName).xml" Pack="true" PackagePath="lib/netstandard2.0/" Visible="true" />
  </ItemGroup>
  <ItemGroup>
    <None Update="license.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Pack>True</Pack>
      <Visible>True</Visible>
    </None>
    <None Update="DotNetVault Quick Start Guide Windows Vs 2019.pdf">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Pack>True</Pack>
      <Visible>True</Visible>
    </None>
    <None Update="DotNetVault Quick Start Guide Linux Rider 2019.3.1 -- (Amazon Linux).pdf">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Pack>True</Pack>
      <Visible>True</Visible>
    </None>
    <None Update="readme.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Pack>True</Pack>
      <Visible>True</Visible>
    </None>
    <None Update="DotNetVault Description.pdf">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Pack>True</Pack>
      <Visible>True</Visible>
    </None>
  </ItemGroup>

</Project>
